[
    {
        "id": "d0d6bce90e2941ce",
        "type": "tab",
        "label": "DarkMoon_SmartWatch",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "875ce7fba87a1ace",
        "type": "mqtt in",
        "z": "d0d6bce90e2941ce",
        "name": "",
        "topic": "Watch",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a512868991e70ac9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 540,
        "wires": [
            [
                "e18efb78e63beae6",
                "1413d52b7c15c33b"
            ]
        ]
    },
    {
        "id": "70c237ab3d850a06",
        "type": "ui_led",
        "z": "d0d6bce90e2941ce",
        "order": 3,
        "group": "17c58e37adee1869",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "Alarm_led_heart",
        "x": 740,
        "y": 140,
        "wires": []
    },
    {
        "id": "32084ce25c8aa800",
        "type": "ui_button",
        "z": "d0d6bce90e2941ce",
        "name": "Button_send",
        "group": "f6b2c558370f9f16",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "msg",
        "x": 790,
        "y": 500,
        "wires": [
            [
                "282c5652d7358f59"
            ]
        ]
    },
    {
        "id": "ad6081379a4e895e",
        "type": "ui_text",
        "z": "d0d6bce90e2941ce",
        "group": "17c58e37adee1869",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "Heartrate_information",
        "label": "Heart rate(per min)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 860,
        "y": 80,
        "wires": []
    },
    {
        "id": "1d7b4f3dc795df92",
        "type": "ui_text",
        "z": "d0d6bce90e2941ce",
        "group": "17c58e37adee1869",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "Accelerometer_information",
        "label": "Accelerometer",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 780,
        "y": 320,
        "wires": []
    },
    {
        "id": "85904f36ce22cef6",
        "type": "ui_led",
        "z": "d0d6bce90e2941ce",
        "order": 9,
        "group": "17c58e37adee1869",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "Alarm_led_acc",
        "x": 740,
        "y": 380,
        "wires": []
    },
    {
        "id": "c45cd8e08cda955c",
        "type": "mqtt out",
        "z": "d0d6bce90e2941ce",
        "name": "",
        "topic": "Watch",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a512868991e70ac9",
        "x": 1390,
        "y": 500,
        "wires": []
    },
    {
        "id": "e18efb78e63beae6",
        "type": "ui_text",
        "z": "d0d6bce90e2941ce",
        "group": "ad8bc704dd493882",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "WatchMsg",
        "label": "Message",
        "format": "{{msg.payload.message}}",
        "layout": "row-spread",
        "className": "",
        "x": 470,
        "y": 500,
        "wires": []
    },
    {
        "id": "282c5652d7358f59",
        "type": "change",
        "z": "d0d6bce90e2941ce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msgsend",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 500,
        "wires": [
            [
                "15044791abcccfe8"
            ]
        ]
    },
    {
        "id": "15044791abcccfe8",
        "type": "function",
        "z": "d0d6bce90e2941ce",
        "name": "MsgDate",
        "func": "const options = {\n    timeZone: 'America/New_York' // Change to your desired North American time zone\n};\n\nmsg.payload = {\n    message: msg.payload,\n    timestamp: new Date().toLocaleTimeString('en-US', options)\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 500,
        "wires": [
            [
                "c45cd8e08cda955c",
                "dbd0c8ca82b01db5"
            ]
        ]
    },
    {
        "id": "f791c2fb39da8c36",
        "type": "mqtt in",
        "z": "d0d6bce90e2941ce",
        "name": "",
        "topic": "Heartrate",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "a512868991e70ac9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 80,
        "wires": [
            [
                "e27057c37dcf2dc1",
                "3f183576add5e203",
                "6b036d39d3b8d3d0",
                "6859173cb3d660e1",
                "221f0aaed8a13e47"
            ]
        ]
    },
    {
        "id": "3f183576add5e203",
        "type": "function",
        "z": "d0d6bce90e2941ce",
        "name": "Takealarm_heart",
        "func": "\nif (msg.payload.hr < 50 || msg.payload.hr > 110) {\n    msg.payload = true;\n}\nelse {\n    msg.payload = false;\n}\n\n\n//msg.payload = msg.payload.alarm;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 140,
        "wires": [
            [
                "40d246e2b5b34aae",
                "70c237ab3d850a06"
            ]
        ]
    },
    {
        "id": "27d1148c348240c2",
        "type": "function",
        "z": "d0d6bce90e2941ce",
        "name": "Takealarm_acc",
        "func": "if (msg.payload.x == 0 && msg.payload.y == 0 && msg.payload.z == 0) {\n    return 0;\n}\nif (msg.payload.alarm ==\"0\"){\n    msg.payload = false;\n}\nelse{\n    msg.payload = true;\n}\n//msg.payload = msg.payload.alarm;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 380,
        "wires": [
            [
                "85904f36ce22cef6",
                "956eedaf68c82d73"
            ]
        ]
    },
    {
        "id": "8b49d8066988904f",
        "type": "ui_template",
        "z": "d0d6bce90e2941ce",
        "group": "17c58e37adee1869",
        "name": "Map",
        "order": 14,
        "width": 0,
        "height": 0,
        "format": "<iframe width=\"425\" height=\"350\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"\n    src=\"https://www.openstreetmap.org/export/embed.html?bbox=-75.19819736480714%2C39.95003716303745%2C-75.1892387866974%2C39.953524379106696&amp;layer=mapnik\"\n    style=\"border: 1px solid black\">",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1090,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "6b036d39d3b8d3d0",
        "type": "debug",
        "z": "d0d6bce90e2941ce",
        "name": "Heartrate_debug0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 20,
        "wires": []
    },
    {
        "id": "e5bb2a37b43510e2",
        "type": "mqtt in",
        "z": "d0d6bce90e2941ce",
        "name": "",
        "topic": "GPS",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "a512868991e70ac9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 680,
        "wires": [
            [
                "522a7f55f5885f8e",
                "6693d8cc183bbde0",
                "b5749133cfd3ab4d"
            ]
        ]
    },
    {
        "id": "a092e62794a82667",
        "type": "mqtt in",
        "z": "d0d6bce90e2941ce",
        "name": "",
        "topic": "Accelerometer",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "a512868991e70ac9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 320,
        "wires": [
            [
                "27d1148c348240c2",
                "84ca8c562dd5e206",
                "29bc2d7b9be20f22",
                "d41e47b368a5be6c"
            ]
        ]
    },
    {
        "id": "fb2d983aa19bed7f",
        "type": "debug",
        "z": "d0d6bce90e2941ce",
        "name": "GPS_debug1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 700,
        "wires": []
    },
    {
        "id": "84ca8c562dd5e206",
        "type": "debug",
        "z": "d0d6bce90e2941ce",
        "name": "Accelerometer_debug1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 440,
        "wires": []
    },
    {
        "id": "e27057c37dcf2dc1",
        "type": "function",
        "z": "d0d6bce90e2941ce",
        "name": "Takevalue_heart",
        "func": "\nmsg.payload = msg.payload.hr;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 80,
        "wires": [
            [
                "ad6081379a4e895e"
            ]
        ]
    },
    {
        "id": "40d246e2b5b34aae",
        "type": "debug",
        "z": "d0d6bce90e2941ce",
        "name": "Heartrate_debug1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 200,
        "wires": []
    },
    {
        "id": "522a7f55f5885f8e",
        "type": "function",
        "z": "d0d6bce90e2941ce",
        "name": "DesperateValue_GPS_Latitude&longitude",
        "func": "node.warn(\"Received message: \" + msg.payload);\n\n// 尝试解析 JSON 格式的消息\ntry {\n    const coordinates = msg.payload;\n\n    // 确保数组包含两个值\n    if (Array.isArray(coordinates) && coordinates.length === 2) {\n        // 从数组中提取第一个和第二个值\n        const value1 = coordinates[0];\n        const value2 = coordinates[1];\n\n        // 将这两个值存储到 msg 对象中\n        msg.longitude = value1;\n        msg.latitude = value2;\n\n        return msg;\n    } else {\n        // 如果数据格式不正确，向调试面板输出警告\n        node.warn(\"Incorrect data format: not an array with two values.\");\n    }\n} catch (error) {\n    // 如果解析 JSON 失败，向调试面板输出错误信息\n    node.error(\"Failed to parse JSON: \" + error.message);\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 680,
        "wires": [
            [
                "fb2d983aa19bed7f",
                "8b49d8066988904f"
            ]
        ]
    },
    {
        "id": "29bc2d7b9be20f22",
        "type": "function",
        "z": "d0d6bce90e2941ce",
        "name": "Takevalue_Acc",
        "func": "if (msg.payload.x == 0 && msg.payload.y == 0 && msg.payload.z == 0) {\n    return 0;\n}\n\nmsg.payload = { x: msg.payload.x, y: msg.payload.y, z: msg.payload.z};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 320,
        "wires": [
            [
                "1d7b4f3dc795df92",
                "94a3e23af9697bb5"
            ]
        ]
    },
    {
        "id": "6693d8cc183bbde0",
        "type": "debug",
        "z": "d0d6bce90e2941ce",
        "name": "GPS_debug0",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 620,
        "wires": []
    },
    {
        "id": "b5749133cfd3ab4d",
        "type": "function",
        "z": "d0d6bce90e2941ce",
        "name": "Takevalue_GPS",
        "func": "msg.payload = { value: msg.payload };\nreturn 1;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 740,
        "wires": [
            [
                "8a66238cce01fae6"
            ]
        ]
    },
    {
        "id": "94a3e23af9697bb5",
        "type": "debug",
        "z": "d0d6bce90e2941ce",
        "name": "Accelerometer_debug0",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 380,
        "wires": []
    },
    {
        "id": "6207a3813eb1dfa0",
        "type": "ui_text_input",
        "z": "d0d6bce90e2941ce",
        "name": "Msgsend",
        "label": "Message",
        "tooltip": "",
        "group": "f6b2c558370f9f16",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "msgsend",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 780,
        "y": 580,
        "wires": [
            [
                "362a1c84dbd75a3b"
            ]
        ]
    },
    {
        "id": "362a1c84dbd75a3b",
        "type": "change",
        "z": "d0d6bce90e2941ce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "msgsend",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "dbd0c8ca82b01db5",
        "type": "ui_text",
        "z": "d0d6bce90e2941ce",
        "group": "f6b2c558370f9f16",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "Time",
        "label": "Time",
        "format": "{{msg.payload.timestamp}}",
        "layout": "row-spread",
        "className": "",
        "x": 1390,
        "y": 580,
        "wires": []
    },
    {
        "id": "1413d52b7c15c33b",
        "type": "ui_text",
        "z": "d0d6bce90e2941ce",
        "group": "ad8bc704dd493882",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "WatchMsgTime",
        "label": "MessageTime",
        "format": "{{msg.payload.timestamp}}",
        "layout": "row-spread",
        "className": "",
        "x": 480,
        "y": 580,
        "wires": []
    },
    {
        "id": "956eedaf68c82d73",
        "type": "debug",
        "z": "d0d6bce90e2941ce",
        "name": "Heartrate_debug0",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "88c7ebed071ab102",
        "type": "ui_button",
        "z": "d0d6bce90e2941ce",
        "name": "Button_reset",
        "group": "f6b2c558370f9f16",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset_Alarm",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "payload",
        "topicType": "msg",
        "x": 210,
        "y": 480,
        "wires": [
            [
                "85904f36ce22cef6",
                "ab35bdf60e070ff1",
                "70c237ab3d850a06"
            ]
        ]
    },
    {
        "id": "d41e47b368a5be6c",
        "type": "function",
        "z": "d0d6bce90e2941ce",
        "name": "Takealarm_acc",
        "func": "if (msg.payload.temp == -100) {\n    return 0;\n}\nmsg.payload = msg.payload.temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 260,
        "wires": [
            [
                "abce1dcd9cbee880"
            ]
        ]
    },
    {
        "id": "abce1dcd9cbee880",
        "type": "ui_text",
        "z": "d0d6bce90e2941ce",
        "group": "17c58e37adee1869",
        "order": 10,
        "width": 6,
        "height": 1,
        "name": "Accelerometer_temp",
        "label": "Tempaerature(DegC)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 260,
        "wires": []
    },
    {
        "id": "6859173cb3d660e1",
        "type": "function",
        "z": "d0d6bce90e2941ce",
        "name": "Takevalue_spo2",
        "func": "\nmsg.payload = msg.payload.spo2;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 40,
        "wires": [
            [
                "849a89e4da776aa8"
            ]
        ]
    },
    {
        "id": "849a89e4da776aa8",
        "type": "ui_text",
        "z": "d0d6bce90e2941ce",
        "group": "17c58e37adee1869",
        "order": 4,
        "width": 6,
        "height": 1,
        "name": "Heartrate_information",
        "label": "Spo2(%)",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1020,
        "y": 40,
        "wires": []
    },
    {
        "id": "ab35bdf60e070ff1",
        "type": "ui_led",
        "z": "d0d6bce90e2941ce",
        "order": 6,
        "group": "17c58e37adee1869",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": false,
        "name": "Alarm_led_spo2",
        "x": 1060,
        "y": 240,
        "wires": []
    },
    {
        "id": "221f0aaed8a13e47",
        "type": "function",
        "z": "d0d6bce90e2941ce",
        "name": "Takealarm_spo2",
        "func": "\nif ( msg.payload.spo2< 94) {\n    msg.payload = true;\n}\nelse {\n    msg.payload = false;\n}\n\n\n//msg.payload = msg.payload.alarm;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 120,
        "wires": [
            [
                "ab35bdf60e070ff1"
            ]
        ]
    },
    {
        "id": "8a66238cce01fae6",
        "type": "ui_text",
        "z": "d0d6bce90e2941ce",
        "group": "17c58e37adee1869",
        "order": 12,
        "width": 6,
        "height": 1,
        "name": "GPS",
        "label": "GPS",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 850,
        "y": 720,
        "wires": []
    },
    {
        "id": "5d3cf0c4329b3536",
        "type": "ui_spacer",
        "z": "d0d6bce90e2941ce",
        "name": "spacer",
        "group": "17c58e37adee1869",
        "order": 2,
        "width": 2,
        "height": 1
    },
    {
        "id": "ada98068804c2cf6",
        "type": "ui_spacer",
        "z": "d0d6bce90e2941ce",
        "name": "spacer",
        "group": "17c58e37adee1869",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "eedfdbc638647952",
        "type": "ui_spacer",
        "z": "d0d6bce90e2941ce",
        "name": "spacer",
        "group": "17c58e37adee1869",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "380f59272330402d",
        "type": "ui_spacer",
        "z": "d0d6bce90e2941ce",
        "name": "spacer",
        "group": "17c58e37adee1869",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "5201263be7a64b4f",
        "type": "ui_spacer",
        "z": "d0d6bce90e2941ce",
        "name": "spacer",
        "group": "17c58e37adee1869",
        "order": 13,
        "width": 3,
        "height": 1
    },
    {
        "id": "a512868991e70ac9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "17c58e37adee1869",
        "type": "ui_group",
        "name": "Information",
        "tab": "e44183540b5fdae1",
        "order": 3,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f6b2c558370f9f16",
        "type": "ui_group",
        "name": "Buttons",
        "tab": "e44183540b5fdae1",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ad8bc704dd493882",
        "type": "ui_group",
        "name": "Watch_test",
        "tab": "e44183540b5fdae1",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e44183540b5fdae1",
        "type": "ui_tab",
        "name": "DarkMoon_SmartWatch",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    }
]